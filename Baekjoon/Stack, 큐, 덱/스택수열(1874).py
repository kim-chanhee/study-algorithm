# 1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로써, 하나의 수열을 만들 수 있다.
# 이때, 스택에 push 하는 순서는 반드시 오름차순을 지키도록 한다.
# 임의의 수열이 주어졌을 때 스택을 이용해 그 수열을 만들 수 있는지 없는지, 
# 있다면 push 와 pop 연산을 수행해야 하는지를 알아낼 수 있다. 

# [입력]
# 첫 줄에 n이 주어진다. 둘째 줄부터 n개의 줄에는 수열을 이루는 1이상 n이하의 정수가 하나씩 
# 순서대로 주어진다. 물론 같은 정수가 두 번 나오는 일은 없다.

# [출력]
# 입력된 수열을 만들기 위해 필요한 연산을 한줄에 한 개씩 출력한다. push 연산은 + 로,
# pop 연산은 - 
# 불가능한 경우 No를 출력한다.

# [예제 입력]    [예제 출력1]
# 8              +   
# 4              +   
# 3              +   
# 6              +  
# 8              - 
# 7              -
# 5              +
# 2              +
# 1              -

# 1,2,3,4    + + + +
# 1,2        - -    4,3
# 1,2,5,6    + +
# 1,2,5      -      6
# 1,2,5,7,8  + +
# x          - - - - -   8,7,5,2,1
# ----------------------------------------
stack = []
count = 1
op = []

N = int(input())  
for i in range(N):
    num = int(input())
    # num 이하 숫자까지 스택에 넣기  num = 4
    while count <= num:
        stack.append(count) 
        op.append('+') # '+' 4개 쌓인다.
        count += 1  # 

    # num 이랑 스택 맨 위 숫자가 동일하다면 제거
    