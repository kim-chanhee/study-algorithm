# 1 X: 정수 X를 스택에 넣는다. (1 ≤ X ≤ 100,000)
# 2: 스택에 정수가 있다면 맨 위의 정수를 빼고 출력한다. 없다면 -1을 대신 출력한다.
# 3: 스택에 들어있는 정수의 개수를 출력한다.
# 4: 스택이 비어있으면 1, 아니면 0을 출력한다.
# 5: 스택에 정수가 있다면 맨 위의 정수를 출력한다. 없다면 -1을 대신 출력한다.

# ========입력============
# 첫째 줄에 명령의 수 N이 주어진다. (1 ≤ N ≤ 1,000,000)

# 둘째 줄부터 N개 줄에 명령이 하나씩 주어진다.

# 출력을 요구하는 명령은 하나 이상 주어진다.
# =======================
# 9            쳣째 줄에 명령어 수 9개 
# 4           4 : 스택이 비었으니 -> 1
# 1 3         1 : 정수 3을 스택에 넣는다.
# 1 5         1 : 정수 5를 스택에 넣는다.
# 3           3 : 스택에 들어있는 정수의 개수를 출력한다. -> 2
# 2           2 : 스택에 정수가 있다면 맨 위의 정수를 빼고 출력한다. -> 5 
# 5           5 : 스택에 정수가 있다면 맨위의 정수를 출력 -> 3    
# 2           2 : 스택에 정수가 있다면 맨위의 정수를 빼고 출력 -> 3
# 2           2 : "" -> -1
# 5           5 : 스택에 정수가 있다면 맨우의 정수를 출력 없다면 -1 -> -1
# -------------------------
# 1. 'sys.stdin.readline().split()' : 'sys.stdin.readline()'을 통해 사용자로부터
# 한 줄을 입력 받는다. 그리고 'split()' 메서드를 사용하여 이 문자열을 공백을 기준으로 분할하여 
# 리스트로 만든다. 
# 2. 'if command[0] == '1' :' 분할된 문자열 리스트에서 첫 번째 요소를 확인하여 
# 이 값이 '1' 인지 확인
# 'stack.append(command[1])' 은 스택에 새로운 요소를 추가하는 동작을 수행한다.
# 'push' 명령어 뒤에 오는 값이 스택에 추가될 값이므로, 이를 'command[1]'에서 가져와
# 스택에 추가합니다. 

import sys
stack = []
n = int(sys.stdin.readline())

for _ in range(n):

    command = sys.stdin.readline().split()

    if command[0] == '1':
        stack.append(command[1])
    elif command[0] == '2':
        if stack:
            print(stack.pop())
        else:
            print(-1)
    elif command[0] == '3':
        print(len(stack))
    elif command[0] == '4':
        if stack:
            print(0)
        else:
            print(1)

    elif command[0] == '5':
        if stack:
            print(stack[-1])  # 스택에 맨 위에 정수를 출력
        else:
            print(-1)



# ================
# https://www.acmicpc.net/problem/10828